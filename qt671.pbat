def mingw1120
    #github_cache(C:\mingw1120_64, :k=mingw1120_64)
    if_exist_return(C:\mingw1120_64\bin\gcc.exe)
    move(C:\mingw64, C:\mingw64_, :github)
    pushd_cd()
        download(https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z, :cache)
        unzip(x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z, :o=C:\)
        move(C:\mingw64, C:\mingw1120_64)
    popd

def qtbase671 depends on mingw1120
    #github_cache(C:\Qt\6.7.1\mingw1120_64, :k=qt671)
    use(ninja)
    use(cmake)
    use(mingw, 11)
    #where(gcc, qmake, cmake, ninja, libpq.dll, libmysql.dll)
    if_exist_return(C:\Qt\6.7.1\mingw1120_64\bin\qmake.exe)
    # move is faster than rmdir
    move(C:\Program Files\PostgreSQL, C:\Program Files\PostgreSQL_, :github)
    move(C:\Program Files\MySQL, C:\Program Files\MySQL_, :github)
    move(C:\Program Files\OpenSSL, C:\Program Files\OpenSSL_, :github)
    move(C:\Strawberry, C:\Strawberry_, :github)
    move(C:\tools\php, C:\tools\php_, :github)
    pushd_cd()
        download(https://download.qt.io/official_releases/qt/6.7/6.7.1/submodules/qtbase-everywhere-src-6.7.1.zip, :cache)
        unzip(qtbase-everywhere-src-6.7.1.zip, :test=qtbase-everywhere-src-6.7.1)
        pushd qtbase-everywhere-src-6.7.1
            # patch(..\patch2.patch, :p1)
            # patch(..\qfilesystemmodel.patch, :p1)
            # -debug-and-release -G "Ninja Multi-Config" -DCMAKE_CONFIGURATION_TYPES="Release;Debug"
            # -release -G Ninja
            # if exist CMakeCache.txt del /f CMakeCache.txt
            # -DQT_INTERNAL_CALLED_FROM_CONFIGURE:BOOL=FALSE 
            # -DFEATURE_developer_build=ON
            # call configure -prefix C:\Qt\6.7.1\mingw1120_64 -opensource -developer-build -confirm-license -shared -platform win32-g++ -opengl desktop -release -plugin-sql-odbc -nomake tests -nomake examples
            # -DINPUT_opengl=desktop
            # -G "Ninja Multi-Config"
            cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=C:/Qt/6.7.1/mingw1120_64 -DQT_QMAKE_TARGET_MKSPEC=win32-g++ -DQT_BUILD_TESTS=FALSE -DQT_BUILD_EXAMPLES=FALSE -DFEATURE_system_zlib=OFF .
            #ninja
            #ninja install
            cmake --build . --parallel
            cmake --install .
            #copy(C:\mingw1120_64\bin\libstdc++-6.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #copy(C:\mingw1120_64\bin\libgcc_s_seh-1.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #copy(C:\mingw1120_64\bin\libwinpthread-1.dll, C:\Qt\6.7.1\mingw1120_64\bin)
        popd
    popd

def qtsvg671
    use(mingw, 11)
    add_path(C:\qt\6.7.1\mingw1120_64\bin)
    if_exist_return(C:\qt\6.7.1\mingw1120_64\bin\Qt6Svg.dll)
    download(https://download.qt.io/official_releases/qt/6.7/6.7.1/submodules/qtsvg-everywhere-src-6.7.1.zip, :cache)
    unzip(qtsvg-everywhere-src-6.7.1.zip, :t=qtsvg-everywhere-src-6.7.1)
    pushd qtsvg-everywhere-src-6.7.1
        mkdir(build)
        pushd build
            cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="C:\Qt\6.7.1\mingw1120_64" -DCMAKE_TOOLCHAIN_FILE=C:\qt\6.7.1\mingw1120_64\lib\cmake\Qt6\qt.toolchain.cmake ..
            #cmake -G "Ninja Multi-Config" -DCMAKE_CONFIGURATION_TYPES="Release;Debug" -DCMAKE_INSTALL_PREFIX="C:\Qt\6.7.1\mingw1120_64" -DCMAKE_TOOLCHAIN_FILE=C:\qt\6.7.1\mingw1120_64\lib\cmake\Qt6\qt.toolchain.cmake ..
            cmake --build .
            cmake --install .
        popd
    popd

def qtactiveqt671
    use(mingw, 11)
    add_path(C:\qt\6.7.1\mingw1120_64\bin)
    if_exist_return(C:\qt\6.7.1\mingw1120_64\lib\libQt6AxContainer.a)
    download(https://download.qt.io/official_releases/qt/6.7/6.7.1/submodules/qtactiveqt-everywhere-src-6.7.1.zip, :cache)
    unzip(qtactiveqt-everywhere-src-6.7.1.zip, :t=qtactiveqt-everywhere-src-6.7.1)
    pushd qtactiveqt-everywhere-src-6.7.1
        mkdir(build)
        pushd build
            cmake -G Ninja -DCMAKE_INSTALL_PREFIX="C:\Qt\6.7.1\mingw1120_64" -DCMAKE_TOOLCHAIN_FILE=C:\qt\6.7.1\mingw1120_64\lib\cmake\Qt6\qt.toolchain.cmake ..
            cmake --build .
            cmake --install .
        popd
    popd

def psql1412
    if_exist_return(C:\postgresql-14\bin\psql.exe)
    if_exist_return(C:\qt\6.7.1\mingw1120_64\plugins\sqldrivers\qsqlpsql.dll)
    pushd_cd()
        download(https://get.enterprisedb.com/postgresql/postgresql-14.12-2-windows-x64-binaries.zip, :cache)
        unzip(postgresql-14.12-2-windows-x64-binaries.zip, :o=C:\)
        move(C:\pgsql, C:\postgresql-14)
    popd

def qsqlpsql671 depends on psql1412 and mingw1120
    use(ninja)
    use(cmake)
    use(conda)
    install(mugideploy)
    use(mingw, 11)
    add_path(C:\qt\6.7.1\mingw1120_64\bin)
    add_path(C:\postgresql-14\bin)
    if_exist_return(C:\qt\6.7.1\mingw1120_64\plugins\sqldrivers\qsqlpsql.dll)
    #where(gcc, qmake, cmake, ninja, libpq.dll, libmysql.dll)
    set PostgreSQL_ROOT=C:\postgresql-14
    pushd_cd()
        mkdir(build-qsqlpsql)
        download(https://download.qt.io/official_releases/qt/6.7/6.7.1/submodules/qtbase-everywhere-src-6.7.1.zip, :cache)
        unzip(qtbase-everywhere-src-6.7.1.zip, :test=qtbase-everywhere-src-6.7.1)
        pushd build-qsqlpsql
            # -G "Ninja Multi-Config"
            cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="C:\Qt\6.7.1\mingw1120_64" -DCMAKE_TOOLCHAIN_FILE=C:\qt\6.7.1\mingw1120_64\lib\cmake\Qt6\qt.toolchain.cmake ..\qtbase-everywhere-src-6.7.1\src\plugins\sqldrivers
            cmake --build .
            cmake --install .
            mugideploy copy-dep --bin C:\qt\6.7.1\mingw1120_64\plugins\sqldrivers\qsqlpsql.dll --dst C:\Qt\6.7.1\mingw1120_64\bin
            # mugideploy list --bin plugins\sqldrivers\qsqlpsql.dll
            # copy(C:\mingw1120_64\bin\libstdc++-6.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            # copy(C:\mingw1120_64\bin\libgcc_s_seh-1.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            # copy(C:\mingw1120_64\bin\libwinpthread-1.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #
            #copy(C:\postgresql-14\bin\libpq.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #copy(C:\postgresql-14\bin\libssl-1_1-x64.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #copy(C:\postgresql-14\bin\libcrypto-1_1-x64.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #copy(C:\postgresql-14\bin\libintl-9.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #copy(C:\postgresql-14\bin\libiconv-2.dll, C:\Qt\6.7.1\mingw1120_64\bin)
        popd
    popd

def mysql820
    if_exist_return(C:\qt\6.7.1\mingw1120_64\plugins\sqldrivers\qsqlmysql.dll)
    if_exist_return(C:\mysql-8.2.0-winx64\bin\mysql.exe)
    pushd_cd()
        download(https://cdn.mysql.com/Downloads/MySQL-8.2/mysql-8.2.0-winx64.zip, :cache)
        unzip(mysql-8.2.0-winx64.zip, :o=C:\)
    popd

def qsqlmysql671 depends on mysql820 and mingw1120
    use(ninja)
    use(cmake)
    use(mingw, 11)
    use(conda)
    install(mugideploy)
    add_path(C:\qt\6.7.1\mingw1120_64\bin)
    if_exist_return(C:\qt\6.7.1\mingw1120_64\plugins\sqldrivers\qsqlmysql.dll)
    add_path(C:\mysql-8.2.0-winx64\lib, C:\mysql-8.2.0-winx64\bin)
    #where(gcc, qmake, cmake, ninja, libpq.dll, libmysql.dll)
    pushd_cd()
        mkdir(build-qsqlmysql)
        download(https://download.qt.io/official_releases/qt/6.7/6.7.1/submodules/qtbase-everywhere-src-6.7.1.zip, :cache)
        unzip(qtbase-everywhere-src-6.7.1.zip, :test=qtbase-everywhere-src-6.7.1)
        pushd build-qsqlmysql
            # -G "Ninja Multi-Config"
            cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="C:\Qt\6.7.1\mingw1120_64" -DCMAKE_TOOLCHAIN_FILE=C:\qt\6.7.1\mingw1120_64\lib\cmake\Qt6\qt.toolchain.cmake -DMySQL_INCLUDE_DIR="C:\mysql-8.2.0-winx64\include" -DMySQL_LIBRARY="C:\mysql-8.2.0-winx64\lib\libmysql.lib" ..\qtbase-everywhere-src-6.7.1\src\plugins\sqldrivers
            cmake --build .
            cmake --install .
            mugideploy copy-dep --bin C:\qt\6.7.1\mingw1120_64\plugins\sqldrivers\qsqlmysql.dll --dst C:\Qt\6.7.1\mingw1120_64\bin
            #copy(C:\mysql-8.2.0-winx64\lib\libmysql.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #copy(C:\mysql-8.2.0-winx64\bin\libssl-3-x64.dll, C:\Qt\6.7.1\mingw1120_64\bin)
            #copy(C:\mysql-8.2.0-winx64\bin\libcrypto-3-x64.dll, C:\Qt\6.7.1\mingw1120_64\bin)
        popd
    popd


